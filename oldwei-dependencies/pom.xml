<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.5.RELEASE</version>
    </parent>

    <groupId>top.oldwei</groupId>
    <artifactId>oldwei-dependencies</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>pom</packaging>


    <!-- env -->
    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <pom.profile.name>local</pom.profile.name>
                <pom.register.eureka.server.defaultZone>http://127.0.0.1:8001/eureka</pom.register.eureka.server.defaultZone>
                <!--配置server端的url数组逗号分割-->
                <pom.config.uri>http://localhost:8002</pom.config.uri>
                <!-- 从配置中心配置的git中那个分支获取-->
                <pom.config.label>develop</pom.config.label>
                <!--配置中心下的那个目录下查找内容-->
                <pom.config.search-paths>oldwei-config-file</pom.config.search-paths>
            </properties>
        </profile>

        <profile>
            <id>dev</id>
            <activation>
                <!-- default -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <pom.profile.name>dev</pom.profile.name>
                <pom.register.eureka.server.defaultZone>http://localhost:8001/eureka</pom.register.eureka.server.defaultZone>
                <!--配置server端的url数组逗号分割-->
                <pom.config.uri>http://localhost:8002</pom.config.uri>
                <!-- 从配置中心配置的git中那个分支获取-->
                <pom.config.label>develop</pom.config.label>
                <!--配置中心下的那个目录下查找内容-->
                <pom.config.search-paths>oldwei-config-file</pom.config.search-paths>
            </properties>

        </profile>

        <profile>
            <id>test</id>
            <properties>
                <pom.profile.name>test</pom.profile.name>
                <pom.register.eureka.server.defaultZone>http://127.0.0.1:8001/eureka</pom.register.eureka.server.defaultZone>
                <!--配置server端的url数组逗号分割-->
                <pom.config.uri>http://localhost:8002</pom.config.uri>
                <!-- 从配置中心配置的git中那个分支获取-->
                <pom.config.label>develop</pom.config.label>
                <!--配置中心下的那个目录下查找内容-->
                <pom.config.search-paths>oldwei-config-file</pom.config.search-paths>
            </properties>

        </profile>

        <profile>
            <id>release</id>

            <properties>
                <pom.profile.name>release</pom.profile.name>
                <pom.register.eureka.server.defaultZone>http://localhost:8001/eureka</pom.register.eureka.server.defaultZone>
                <!--配置server端的url数组逗号分割-->
                <pom.config.uri>http://localhost:8002</pom.config.uri>
                <!-- 从配置中心配置的git中那个分支获取-->
                <pom.config.label>develop</pom.config.label>
                <!--配置中心下的那个目录下查找内容-->
                <pom.config.search-paths>oldwei-config-file</pom.config.search-paths>
            </properties>

        </profile>

    </profiles>



    <properties>

        <pom.register.eureka.server.port>8001</pom.register.eureka.server.port>
        <pom.config.server.port>8002</pom.config.server.port>
        <pom.product.port>8003</pom.product.port>
        <pom.user.port>8004</pom.user.port>
        <pom.order.port>8005</pom.order.port>
        <pom.gateway.port>8006</pom.gateway.port>
        <pom.gpu.monitor.port>8007</pom.gpu.monitor.port>
        <pom.websocket.port>8008</pom.websocket.port>
        <!-- chat 模块 -->
        <pom.netty.chat.port>8009</pom.netty.chat.port>
        <pom.netty.chat.netty.port>8010</pom.netty.chat.netty.port>

        <!-- netty模块 客户端 相关-->
        <pom.netty.client.port>8011</pom.netty.client.port>

        <!-- netty模块服务端 相关 -->
        <pom.netty.server.port>8012</pom.netty.server.port>
        <pom.netty.server.netty.port>8013</pom.netty.server.netty.port>
        <pom.netty.server.netty.ws.port>8014</pom.netty.server.netty.ws.port>


        <!-- demo 相关模块 -->
        <pom.demo.big-file-upload.port>8015</pom.demo.big-file-upload.port>



        <pom.register.eureka.server.name>oldwei-register-eureka-server</pom.register.eureka.server.name>
        <pom.config.server.name>oldwei-config-server</pom.config.server.name>
        <pom.product.name>oldwei-product</pom.product.name>
        <pom.user.name>oldwei-user</pom.user.name>
        <pom.order.name>oldwei-order</pom.order.name>
        <pom.gateway.name>oldwei-gateway</pom.gateway.name>
        <pom.gpu.monitor.name>oldwei-gpu-monitor</pom.gpu.monitor.name>
        <pom.websocket.name>oldwei-websocket</pom.websocket.name>
        <pom.netty.chat.name>oldwei-netty-chat</pom.netty.chat.name>
        <pom.netty.client.name>oldwei-netty-client</pom.netty.client.name>
        <pom.netty.server.name>oldwei-netty-server</pom.netty.server.name>
        <pom.demo.big-file-upload.name>oldwei-demo-big-file-upload</pom.demo.big-file-upload.name>






        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring.cloud.version>Hoxton.RELEASE</spring.cloud.version>

        <spring.version>5.2.2.RELEASE</spring.version>
        <spring.boot.version>2.2.2.RELEASE</spring.boot.version>
        <spring-cloud-alibaba-dependencies.version>2.1.1.RELEASE</spring-cloud-alibaba-dependencies.version>
        <!-- 分布式事务解决方法-->
        <seata.version>1.1.0</seata.version>

        <spring-boot-admin.version>2.2.0</spring-boot-admin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <mybatis.version>3.5.2</mybatis.version>
        <mybatis.typehandlers.version>1.0.2</mybatis.typehandlers.version>

        <mybatisplus.version>3.3.1</mybatisplus.version>

        <p6spy.version>3.8.7</p6spy.version>
        <!--        <mybatis.dynamic.version>2.5.4</mybatis.dynamic.version>-->
        <!--        <mybatis.spring.version>2.0.3</mybatis.spring.version>-->

        <druid.version>1.1.21</druid.version>
        <mysql.version>6.0.6</mysql.version>
        <knife4j.version>2.0.1</knife4j.version>
        <springfox.swagger2.version>2.9.2</springfox.swagger2.version>
        <swagger.version>1.5.21</swagger.version>


        <lombok.version>1.18.10</lombok.version>

        <guava.version>20.0</guava.version>
        <tobato-fastdfs-client.version>1.26.6</tobato-fastdfs-client.version>
        <qiniu-java-sdk>7.2.18</qiniu-java-sdk>
        <j2cache.version>2.8.0-release</j2cache.version>
        <hibernate.validator.version>6.1.0.Final</hibernate.validator.version>


        <elasticsearch.version>3.2.3.RELEASE</elasticsearch.version>
        <dubbo.version>2.7.5</dubbo.version>
        <zk.client.version>0.1</zk.client.version>
        <zk.version>3.4.9</zk.version>
        <curator.version>4.2.0</curator.version>

        <!--实用工具-->

        <lombok.version>1.18.10</lombok.version>
        <mysql.version>8.0.16</mysql.version>
        <hutool.version>4.6.2</hutool.version>
        <guava.version>28.0-jre</guava.version>

        <fastjson.version>1.2.62</fastjson.version>


        <asm.version>5.0.4</asm.version>

        <qcloudsms.version>1.0.6</qcloudsms.version>
        <bce-java-sdk.version>0.10.21</bce-java-sdk.version>

        <antisamy.version>1.5.7</antisamy.version>

        <commons-exec.version>1.3</commons-exec.version>
        <commons-email.version>1.5</commons-email.version>
        <commons.collections4.version>4.4</commons.collections4.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-codec.version>1.14</commons-codec.version>


        <neo4j-driver.version>4.0.1</neo4j-driver.version>

        <easy-captcha.version>1.6.2</easy-captcha.version>

        <dozer.version>6.5.0</dozer.version>

        <jjwt.version>0.7.0</jjwt.version>

        <ip2region.version>1.7.2</ip2region.version>

        <bitwalker.version>1.21</bitwalker.version>

        <netty.version>4.1.42.Final</netty.version>

        <spark.version>2.4.4</spark.version>
        <scala.version>2.12</scala.version>
        <hadoop.version>3.2.0</hadoop.version>

        <jsch.version>0.1.55</jsch.version>

        <!-- 处理视频 -->
        <javacv.version>1.4.3</javacv.version>
        <ffmpeg-platform.version>4.0.2-1.4.3</ffmpeg-platform.version>


    </properties>


    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
            </dependency>


            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <!--<dependency>-->
                <!--<groupId>org.apache.dubbo</groupId>-->
                <!--<artifactId>dubbo-dependencies-bom</artifactId>-->
                <!--<version>${dubbo.version}</version>-->
                <!--<type>pom</type>-->
                <!--<scope>import</scope>-->
            <!--</dependency>-->

            <!--<dependency>-->
                <!--<groupId>org.springframework</groupId>-->
                <!--<artifactId>spring-framework-bom</artifactId>-->
                <!--<version>${spring.version}</version>-->
                <!--<type>pom</type>-->
                <!--<scope>import</scope>-->
            <!--</dependency>-->

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>


            <!-- 持久层相关 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-typehandlers-jsr310</artifactId>
                <version>${mybatis.typehandlers.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>net.oschina.j2cache</groupId>
                <artifactId>j2cache-core</artifactId>
                <version>${j2cache.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-simple</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo-spring-boot-starter -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.sgroschupf</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zk.client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zk.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <!-- FastDFS文件 -->
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${tobato-fastdfs-client.version}</version>
            </dependency>
            <!-- 七牛依赖 -->
            <dependency>
                <groupId>com.qiniu</groupId>
                <artifactId>qiniu-java-sdk</artifactId>
                <version>${qiniu-java-sdk}</version>
            </dependency>

            <!-- swagger2 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.swagger2.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.swagger</groupId>
                        <artifactId>swagger-models</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${springfox.swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-core</artifactId>
                <version>${springfox.swagger2.version}</version>
            </dependency>
            <!--            <dependency>-->
            <!--                <groupId>com.github.xiaoymin</groupId>-->
            <!--                <artifactId>swagger-bootstrap-ui</artifactId>-->
            <!--                <version>${sbu.version}</version>-->
            <!--            </dependency>-->

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-ui</artifactId>
                <version>${knife4j.version}</version>
            </dependency>


            <!--防止XSS攻击-->
            <dependency>
                <groupId>org.owasp.antisamy</groupId>
                <artifactId>antisamy</artifactId>
                <version>${antisamy.version}</version>
            </dependency>

            <!--基于Guava 的缓存框架-->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/org.neo4j.driver/neo4j-java-driver -->
            <dependency>
                <groupId>org.neo4j.driver</groupId>
                <artifactId>neo4j-java-driver</artifactId>
                <version>${neo4j-driver.version}</version>
            </dependency>

            <!--Java 图形验证码-->
            <dependency>
                <groupId>com.github.whvcse</groupId>
                <artifactId>easy-captcha</artifactId>
                <version>${easy-captcha.version}</version>
            </dependency>

            <!-- 对象转换 -->
            <dependency>
                <groupId>com.github.dozermapper</groupId>
                <artifactId>dozer-spring-boot-starter</artifactId>
                <version>${dozer.version}</version>
            </dependency>

            <!-- jwt -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!--ip 转换地址-->
            <dependency>
                <groupId>org.lionsoul</groupId>
                <artifactId>ip2region</artifactId>
                <version>${ip2region.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/eu.bitwalker/UserAgentUtils -->
            <dependency>
                <groupId>eu.bitwalker</groupId>
                <artifactId>UserAgentUtils</artifactId>
                <version>${bitwalker.version}</version>
            </dependency>


            <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-launcher_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-mllib_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-hdfs</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-mapreduce-client-core</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.jcraft/jsch -->
            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>


            <dependency>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacv</artifactId>
                <version>${javacv.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bytedeco.javacpp-presets</groupId>
                <artifactId>ffmpeg-platform</artifactId>
                <version>${ffmpeg-platform.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!--Lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>


                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>


            </plugins>
        </pluginManagement>
        <plugins>
            <!-- resources资源插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- 后缀为pem、pfx的证书文件 -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        <nonFilteredFileExtension>key</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <!-- java文档插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>



        </plugins>

    </build>


</project>
